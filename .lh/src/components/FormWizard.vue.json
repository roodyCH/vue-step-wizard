{
    "sourceFile": "src/components/FormWizard.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1675334772021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1675334772021,
            "name": "Commit-0",
            "content": "<template>\n\t<div class=\"vue-step-wizard\">\n\t\t<div class=\"step-header\">\n\t\t\t<div class=\"step-progress\">\n\t\t\t\t<div class=\"bar progressbar\" :style=\"{ width: progress + '%' }\"></div>\n\t\t\t</div>\n\t\t\t<ul class=\"step-pills\">\n\t\t\t\t<li\n\t\t\t\t\t@click.prevent.stop=\"selectTab(index)\"\n\t\t\t\t\tclass=\"step-item\"\n\t\t\t\t\t:class=\"{ active: tab.isActive, validated: tab.isValidated }\"\n\t\t\t\t\tv-for=\"(tab, index) in tabs\"\n\t\t\t\t\tv-bind:key=\"`tab-${index}`\"\n\t\t\t\t>\n\t\t\t\t\t<a class=\"step-link\" href=\"#\">\n\t\t\t\t\t\t<span class=\"tabStatus\">{{ index + 1 }} </span>\n\t\t\t\t\t\t<span class=\"tabLabel\">{{ tab.title }}</span>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t\t<div class=\"step-body\">\n\t\t\t<form>\n\t\t\t\t<slot></slot>\n\t\t\t</form>\n\t\t</div>\n\t\t<div class=\"step-footer\">\n\t\t\t<div class=\"btn-group\" role=\"group\">\n\t\t\t\t<template v-if=\"!submitSuccess\">\n\t\t\t\t\t<button @click=\"previousTab\" :disabled=\"currentTab === 0\" class=\"step-button step-button-previous\">Zur√ºck</button>\n\t\t\t\t\t<button @click=\"nextTab\" v-if=\"currentTab < totalTabs - 1\" class=\"step-button step-button-next\">Weiter</button>\n\t\t\t\t\t<button @click=\"onSubmit\" v-if=\"currentTab === totalTabs - 1\" class=\"step-button step-button-submit\">Speichern</button>\n\t\t\t\t</template>\n\t\t\t\t<template v-else>\n\t\t\t\t\t<button @click=\"reset\" class=\"step-button step-button-reset\">Reset</button>\n\t\t\t\t</template>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n<script>\nimport { store } from './store.js'\nexport default {\n\tname: 'form-wizard',\n\tdata() {\n\t\treturn {\n\t\t\ttabs: [],\n\t\t\tcurrentTab: 0,\n\t\t\ttotalTabs: 0,\n\t\t\tstoreState: store.state,\n\t\t\tsubmitSuccess: false,\n\t\t\tprogress: 0,\n\t\t\tisValidationSupport: false,\n\t\t}\n\t},\n\tmounted() {\n\t\tthis.tabs = this.$children\n\t\tthis.totalTabs = this.tabs.length\n\t\tthis.currentTab = this.tabs.findIndex((tab) => tab.isActive === true)\n\n\t\t//Select first tab if none is marked selected\n\t\tif (this.currentTab === -1 && this.totalTabs > 0) {\n\t\t\tthis.tabs[0].isActive = true\n\t\t\tthis.currentTab = 0\n\t\t}\n\n\t\t//Setup Initial Progress\n\t\tthis.progress = ((this.currentTab + 1) / this.totalTabs) * 100\n\t},\n\n\tupdated() {\n\t\t/*\n          Using this lifehook - since store variable gets updated after component is mounted\n          isValidationSupport checks if user is looking to perform validation on each step\n        */\n\t\tthis.isValidationSupport = Object.keys(this.storeState.v).length !== 0 && this.storeState.v.constructor === Object ? true : false\n\t},\n\n\tmethods: {\n\t\tpreviousTab() {\n\t\t\tthis._switchTab(this.currentTab - 1)\n\n\t\t\tthis.$emit('onPreviousStep')\n\t\t},\n\n\t\tnextTab() {\n\t\t\tif (this._validateCurrentTab() === false) return\n\n\t\t\tthis._switchTab(this.currentTab + 1)\n\n\t\t\tthis.$emit('onNextStep')\n\t\t},\n\n\t\treset() {\n\t\t\tthis.tabs.forEach((tab) => {\n\t\t\t\ttab.isActive = false\n\t\t\t\ttab.isValidated = false\n\t\t\t})\n\n\t\t\tthis._switchTab(0)\n\t\t\tthis.submitSuccess = false\n\t\t\tthis.storeState.v.$reset()\n\n\t\t\tthis.$emit('onReset')\n\t\t},\n\n\t\tchangeStatus() {\n\t\t\tthis.submitSuccess = true\n\t\t},\n\n\t\tselectTab(index) {\n\t\t\t//Only switch to filled previous tabs\n\t\t\tif (index < this.currentTab) {\n\t\t\t\tthis._switchTab(index)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (this._validateCurrentTab() === false) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (this.tabs[index - 1].isValidated === false) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tthis._switchTab(index)\n\t\t},\n\n\t\tonSubmit() {\n\t\t\tif (this._validateCurrentTab() === false) return\n\t\t\tthis.$emit('onComplete')\n\t\t},\n\n\t\t_switchTab(index) {\n\t\t\t//Disable all tabs\n\t\t\tthis.tabs.forEach((tab) => {\n\t\t\t\ttab.isActive = false\n\t\t\t})\n\n\t\t\tthis.currentTab = index\n\t\t\tthis.tabs[index].isActive = true\n\n\t\t\tthis.progress = ((this.currentTab + 1) / this.totalTabs) * 100\n\t\t},\n\n\t\t_validateCurrentTab() {\n\t\t\tif (!this.isValidationSupport)\n\t\t\t\t//Check if user wants to validate\n\t\t\t\treturn true\n\n\t\t\tthis.storeState.v.$touch()\n\n\t\t\tif (this.storeState.v.$invalid) {\n\t\t\t\tthis.tabs[this.currentTab].isValidated = false\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tthis.tabs[this.currentTab].isValidated = true\n\n\t\t\treturn true\n\t\t},\n\t},\n\twatch: {\n\t\tcurrentTab() {\n\t\t\tstore.setCurrentTab(this.currentTab)\n\t\t},\n\t},\n}\n</script>\n<style>\n.progressbar {\n\ttransition: width 1s ease;\n}\n\n.vue-step-wizard {\n\tbackground-color: #f7f8fc;\n\twidth: 900px;\n\tmargin: auto;\n\tpadding: 40px;\n}\n\n.step-progress {\n\theight: 1rem;\n\tbackground: white;\n\tborder-radius: 1rem;\n\tmargin: 1rem 0rem;\n}\n\n.step-progress .bar {\n\tcontent: '';\n\theight: 1rem;\n\tborder-radius: 1rem;\n\tbackground-color: #4b8aeb;\n}\n\n.step-pills {\n\tdisplay: flex;\n\tbackground-color: white;\n\tjustify-content: space-between;\n\tpadding: 1rem;\n\tborder-radius: 1rem;\n\tbox-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\n}\n\n.step-pills .step-item {\n\tbackground-color: #f5f5f5;\n\tborder-radius: 10px;\n\tpadding: 5px 20px;\n\tlist-style-type: none;\n\tpadding: 0.5rem 1.5rem;\n}\n\n.step-pills .step-item a {\n\ttext-decoration: none;\n\tcolor: #7b7b7b;\n}\n\n.step-pills .step-item.active {\n\tborder: 1px solid #4b8aeb;\n}\n\n.step-pills .step-item.validated {\n\tborder: 1px solid #008011;\n}\n\n.step-body {\n\tbackground-color: white;\n\tmargin-left: auto;\n\tpadding: 1rem;\n\tborder-radius: 1rem;\n\tbox-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\n}\n\n.step-footer {\n\tmargin-left: auto;\n\tpadding: 1rem;\n\tborder-radius: 1rem;\n\tmargin: 1rem 0rem;\n\ttext-align: center;\n}\n\n.step-button {\n\tfont-weight: 700;\n\tline-height: 1;\n\ttext-transform: uppercase;\n\tposition: relative;\n\tmax-width: 30rem;\n\ttext-align: center;\n\tborder: 1px solid;\n\tborder-radius: 12px;\n\tcolor: #22292f;\n\tcolor: rgba(34, 41, 47, var(--text-opacity));\n\tpadding: 0.5rem 1.25rem;\n\tfont-size: 0.875rem;\n\tmargin: 0.5rem;\n\tcolor: #fff;\n\toutline: none !important;\n\tbox-shadow: none !important;\n}\n\n.step-button-next {\n\tbackground-color: #126fde;\n}\n\n.step-button-previous {\n\tbackground-color: #3deaba;\n}\n\n.step-button-submit {\n\tbackground-color: #4fa203;\n}\n\n.step-button-reset {\n\tbackground-color: #037da2;\n}\n\n/** Wizard Ends */\n.tabStatus {\n\tdisplay: inline-block;\n\twidth: 1.5rem;\n\theight: 1.5rem;\n\tmargin-right: 0.5rem;\n\tline-height: 1.5rem;\n\tcolor: #fff;\n\ttext-align: center;\n\tbackground: rgba(0, 0, 0, 0.38);\n\tborder-radius: 50%;\n}\n</style>\n"
        }
    ]
}